--------------------------------------------------------------------Problem------Statement---------------------------------------------------------------------------------------
Given an array of integers and a number x, find the smallest subarray with sum greater than the given value.
Examples:
arr[] = {1, 4, 45, 6, 0, 19}
   x  =  51
Output: 3
Minimum length subarray is {4, 45, 6}

arr[] = {1, 10, 5, 2, 7}
   x  = 9
Output: 1
Minimum length subarray is {10}
----------------------------------------------------------------------Approch-----------------------------------------------------------------------------------------------------
A simple solution is to use two nested loops. The outer loop picks a starting element, the inner loop considers all elements (on right side of current start) as ending element.
Whenever sum of elements between current start and end becomes more than the given number, update the result if current length is smaller than the smallest length so far.

---------------------------------------------------------------------------------Code--------------------------------------------------------------------------------------------
public  class alam
{
    public static int sub(int a[], int size , int num)
    {
        int len = size+1;
        for(int start=0;start<size;start++)
        {
            int current = a[start];
            if(current>num)
            {
                return 1;
            }
            for(int end =start+1; end <size;end++)
            {
                current+=a[end];
                if(current>num && (end-start+1)<len)
                {
                    len = (end-start+1);
                }
            }
        }
        return len;
    }
    public static void main(String[] args)
    {
        int a[] ={3,4,5,6,7,8,9};
        int num =9;
        int size = a.length;
        System.out.print(sub(a,size,num));
    }
}
